<?php

/**
 * @file
 * Install, update and uninstall functions for the PoolParty Taxonomy Manager module
 */

/**
 * Implements hook_schema().
 */
function pp_taxonomy_manager_schema() {
  $schema['pp_taxonomy_manager_logs'] = array(
    'description' => 'Table that contains import logs.',
    'fields' => array(
      'tmiid' => array(
        'description' => 'The ID of the import.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tmid' => array(
        'description' => 'The PoolParty Taxonomy Manager ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The taxonomy ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'start_time' => array(
        'description' => 'The start time of the import.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'end_time' => array(
        'description' => 'The end time of the import.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The user ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('tmiid'),
    'indexes' => array(
      'tmid_vid' => array('tmid', 'vid'),
    ),
  );
  $schema['pp_taxonomy_manager_terms'] = array(
    'description' => 'Table that stores all the connected concepts with a PoolParty Thesaurus',
    'fields' => array(
      'tid' => array(
        'description' => 'The connected term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'The PP language of the entry.',
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The ID of the vocabulary where the term comes from.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'tmid' => array(
        'description' => 'The PoolParty Taxonomy Manager ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'synced' => array(
        'description' => 'Synchronization date of the term.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uri' => array(
        'description' => 'Concept URI of the term.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'hash' => array(
        'description' => 'The hash of the source item.',
        'type' => 'varchar',
        'length' => 32,
      ),
    ),
    'primary key' => array('tid', 'language'),
    'indexes' => array(
      'tmid_vid_uri' => array('tmid', 'vid', array('uri', 128)),
    ),
  );

  return $schema;
}

/**
 * Add the root level property to existing configurations.
 */
function pp_taxonomy_manager_update_8101() {
  // Update existing configurations.
  $configs = \Drupal\pp_taxonomy_manager\Entity\PPTaxonomyManagerConfig::loadMultiple();
  /** @var \Drupal\pp_taxonomy_manager\Entity\PPTaxonomyManagerConfig $config */
  foreach ($configs as $config) {
    $settings = $config->getConfig();
    $settings['root_level'] = 'conceptscheme';
    $config->setConfig($settings);
    $config->save();
  }

  return t('Added the root level property to existing PP Taxonomy Manager configurations.');
}